digraph y {
	edge [fontsize=10];
	node [shape=box,fontsize=10];
	orientation=landscape;
	rankdir=LR;
	/*
	margin=0.2;
	page="8.27,11.69"; // for A4 printing
	ratio=auto;
	*/

	q0 [label="0:\l  $accept -> . commands $end\l  commands -> . command ';'\l  commands -> . commands command ';'\l  command -> . EXPR\l  command -> . VAR\l  command -> . DUMP\l  command -> . CLEAR\l  EXPR -> . EXPR_ASSIGN\l  EXPR_ASSIGN -> . EXPR_ASSIGN_SIMPLE\l  EXPR_ASSIGN -> . VAR ASSIGN EXPR_ADD_SUB\l  EXPR_ASSIGN_SIMPLE -> . EXPR_BIT_OR\l  EXPR_ASSIGN_SIMPLE -> . VAR '=' EXPR_BIT_NOT\l  EXPR_BIT_OR -> . EXPR_BIT_XOR\l  EXPR_BIT_OR -> . EXPR_BIT_OR '|' EXPR_BIT_XOR\l  EXPR_BIT_XOR -> . EXPR_BIT_AND\l  EXPR_BIT_XOR -> . EXPR_BIT_XOR '^' EXPR_BIT_AND\l  EXPR_BIT_AND -> . EXPR_SHIFT\l  EXPR_BIT_AND -> . EXPR_BIT_AND '&' EXPR_SHIFT\l  EXPR_SHIFT -> . EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT RSHIFT EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q1 [label="1:\l  EXPR_PARENS -> NUM . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q2 [label="2:\l  command -> VAR . { ';' }\l  EXPR_ASSIGN -> VAR . ASSIGN EXPR_ADD_SUB\l  EXPR_ASSIGN_SIMPLE -> VAR . '=' EXPR_BIT_NOT\l  EXPR_PARENS -> VAR . { '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q3 [label="3:\l  command -> DUMP . { ';' }\l"];
	q4 [label="4:\l  command -> CLEAR . { ';' }\l"];
	q5 [label="5:\l  EXPR_NEGATE -> '-' . EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q6 [label="6:\l  EXPR_BIT_NOT -> '~' . EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q7 [label="7:\l  EXPR -> . EXPR_ASSIGN\l  EXPR_ASSIGN -> . EXPR_ASSIGN_SIMPLE\l  EXPR_ASSIGN -> . VAR ASSIGN EXPR_ADD_SUB\l  EXPR_ASSIGN_SIMPLE -> . EXPR_BIT_OR\l  EXPR_ASSIGN_SIMPLE -> . VAR '=' EXPR_BIT_NOT\l  EXPR_BIT_OR -> . EXPR_BIT_XOR\l  EXPR_BIT_OR -> . EXPR_BIT_OR '|' EXPR_BIT_XOR\l  EXPR_BIT_XOR -> . EXPR_BIT_AND\l  EXPR_BIT_XOR -> . EXPR_BIT_XOR '^' EXPR_BIT_AND\l  EXPR_BIT_AND -> . EXPR_SHIFT\l  EXPR_BIT_AND -> . EXPR_BIT_AND '&' EXPR_SHIFT\l  EXPR_SHIFT -> . EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT RSHIFT EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> '(' . EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q8 [label="8:\l  $accept -> commands . $end\l  commands -> commands . command ';'\l  command -> . EXPR\l  command -> . VAR\l  command -> . DUMP\l  command -> . CLEAR\l  EXPR -> . EXPR_ASSIGN\l  EXPR_ASSIGN -> . EXPR_ASSIGN_SIMPLE\l  EXPR_ASSIGN -> . VAR ASSIGN EXPR_ADD_SUB\l  EXPR_ASSIGN_SIMPLE -> . EXPR_BIT_OR\l  EXPR_ASSIGN_SIMPLE -> . VAR '=' EXPR_BIT_NOT\l  EXPR_BIT_OR -> . EXPR_BIT_XOR\l  EXPR_BIT_OR -> . EXPR_BIT_OR '|' EXPR_BIT_XOR\l  EXPR_BIT_XOR -> . EXPR_BIT_AND\l  EXPR_BIT_XOR -> . EXPR_BIT_XOR '^' EXPR_BIT_AND\l  EXPR_BIT_AND -> . EXPR_SHIFT\l  EXPR_BIT_AND -> . EXPR_BIT_AND '&' EXPR_SHIFT\l  EXPR_SHIFT -> . EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT RSHIFT EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q9 [label="9:\l  command -> EXPR . { ';' }\l"];
	q10 [label="10:\l  EXPR_SHIFT -> EXPR_ADD_SUB . { ')' '&' '^' '|' ';' RSHIFT LSHIFT }\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '-' EXPR_MULT_DIV\l"];
	q11 [label="11:\l  EXPR_ADD_SUB -> EXPR_MULT_DIV . { ')' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '%' EXPR_NEGATE\l"];
	q12 [label="12:\l  EXPR -> EXPR_ASSIGN . { ')' ';' }\l"];
	q13 [label="13:\l  EXPR_ASSIGN -> EXPR_ASSIGN_SIMPLE . { ')' ';' }\l"];
	q14 [label="14:\l  EXPR_NEGATE -> EXPR_BIT_NOT . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q15 [label="15:\l  EXPR_MULT_DIV -> EXPR_NEGATE . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q16 [label="16:\l  EXPR_BIT_AND -> EXPR_SHIFT . { ')' '&' '^' '|' ';' }\l  EXPR_SHIFT -> EXPR_SHIFT . LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> EXPR_SHIFT . RSHIFT EXPR_ADD_SUB\l"];
	q17 [label="17:\l  EXPR_BIT_XOR -> EXPR_BIT_AND . { ')' '^' '|' ';' }\l  EXPR_BIT_AND -> EXPR_BIT_AND . '&' EXPR_SHIFT\l"];
	q18 [label="18:\l  EXPR_BIT_OR -> EXPR_BIT_XOR . { ')' '|' ';' }\l  EXPR_BIT_XOR -> EXPR_BIT_XOR . '^' EXPR_BIT_AND\l"];
	q19 [label="19:\l  EXPR_ASSIGN_SIMPLE -> EXPR_BIT_OR . { ')' ';' }\l  EXPR_BIT_OR -> EXPR_BIT_OR . '|' EXPR_BIT_XOR\l"];
	q20 [label="20:\l  EXPR_BIT_NOT -> EXPR_PARENS . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q21 [label="21:\l  commands -> command . ';'\l"];
	q22 [label="22:\l  EXPR_ASSIGN -> VAR ASSIGN . EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q23 [label="23:\l  EXPR_ASSIGN_SIMPLE -> VAR '=' . EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q24 [label="24:\l  EXPR_PARENS -> VAR . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q25 [label="25:\l  EXPR_NEGATE -> '-' EXPR_BIT_NOT . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q26 [label="26:\l  EXPR_BIT_NOT -> '~' EXPR_PARENS . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q27 [label="27:\l  EXPR_ASSIGN -> VAR . ASSIGN EXPR_ADD_SUB\l  EXPR_ASSIGN_SIMPLE -> VAR . '=' EXPR_BIT_NOT\l  EXPR_PARENS -> VAR . { ')' '%' '/' '*' '-' '+' '&' '^' '|' RSHIFT LSHIFT }\l"];
	q28 [label="28:\l  EXPR_PARENS -> '(' EXPR . ')'\l"];
	q29 [label="29:\l  commands -> commands command . ';'\l"];
	q30 [label="30:\l  EXPR_ADD_SUB -> EXPR_ADD_SUB '+' . EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q31 [label="31:\l  EXPR_ADD_SUB -> EXPR_ADD_SUB '-' . EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q32 [label="32:\l  EXPR_MULT_DIV -> EXPR_MULT_DIV '*' . EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q33 [label="33:\l  EXPR_MULT_DIV -> EXPR_MULT_DIV '/' . EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q34 [label="34:\l  EXPR_MULT_DIV -> EXPR_MULT_DIV '%' . EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q35 [label="35:\l  EXPR_SHIFT -> EXPR_SHIFT LSHIFT . EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q36 [label="36:\l  EXPR_SHIFT -> EXPR_SHIFT RSHIFT . EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q37 [label="37:\l  EXPR_BIT_AND -> EXPR_BIT_AND '&' . EXPR_SHIFT\l  EXPR_SHIFT -> . EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT RSHIFT EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q38 [label="38:\l  EXPR_BIT_XOR -> EXPR_BIT_XOR '^' . EXPR_BIT_AND\l  EXPR_BIT_AND -> . EXPR_SHIFT\l  EXPR_BIT_AND -> . EXPR_BIT_AND '&' EXPR_SHIFT\l  EXPR_SHIFT -> . EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT RSHIFT EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q39 [label="39:\l  EXPR_BIT_OR -> EXPR_BIT_OR '|' . EXPR_BIT_XOR\l  EXPR_BIT_XOR -> . EXPR_BIT_AND\l  EXPR_BIT_XOR -> . EXPR_BIT_XOR '^' EXPR_BIT_AND\l  EXPR_BIT_AND -> . EXPR_SHIFT\l  EXPR_BIT_AND -> . EXPR_BIT_AND '&' EXPR_SHIFT\l  EXPR_SHIFT -> . EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> . EXPR_SHIFT RSHIFT EXPR_ADD_SUB\l  EXPR_ADD_SUB -> . EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> . EXPR_ADD_SUB '-' EXPR_MULT_DIV\l  EXPR_MULT_DIV -> . EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> . EXPR_MULT_DIV '%' EXPR_NEGATE\l  EXPR_NEGATE -> . EXPR_BIT_NOT\l  EXPR_NEGATE -> . '-' EXPR_BIT_NOT\l  EXPR_BIT_NOT -> . EXPR_PARENS\l  EXPR_BIT_NOT -> . '~' EXPR_PARENS\l  EXPR_PARENS -> . '(' EXPR ')'\l  EXPR_PARENS -> . VAR\l  EXPR_PARENS -> . NUM\l"];
	q40 [label="40:\l  commands -> command ';' . { '(' '~' '-' CLEAR DUMP VAR NUM $end }\l"];
	q41 [label="41:\l  EXPR_ASSIGN -> VAR ASSIGN EXPR_ADD_SUB . { ')' ';' }\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '-' EXPR_MULT_DIV\l"];
	q42 [label="42:\l  EXPR_ASSIGN_SIMPLE -> VAR '=' EXPR_BIT_NOT . { ')' ';' }\l"];
	q43 [label="43:\l  EXPR_PARENS -> '(' EXPR ')' . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q44 [label="44:\l  commands -> commands command ';' . { '(' '~' '-' CLEAR DUMP VAR NUM $end }\l"];
	q45 [label="45:\l  EXPR_ADD_SUB -> EXPR_ADD_SUB '+' EXPR_MULT_DIV . { ')' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '%' EXPR_NEGATE\l"];
	q46 [label="46:\l  EXPR_ADD_SUB -> EXPR_ADD_SUB '-' EXPR_MULT_DIV . { ')' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '*' EXPR_NEGATE\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '/' EXPR_NEGATE\l  EXPR_MULT_DIV -> EXPR_MULT_DIV . '%' EXPR_NEGATE\l"];
	q47 [label="47:\l  EXPR_MULT_DIV -> EXPR_MULT_DIV '*' EXPR_NEGATE . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q48 [label="48:\l  EXPR_MULT_DIV -> EXPR_MULT_DIV '/' EXPR_NEGATE . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q49 [label="49:\l  EXPR_MULT_DIV -> EXPR_MULT_DIV '%' EXPR_NEGATE . { ')' '%' '/' '*' '-' '+' '&' '^' '|' ';' RSHIFT LSHIFT }\l"];
	q50 [label="50:\l  EXPR_SHIFT -> EXPR_SHIFT LSHIFT EXPR_ADD_SUB . { ')' '&' '^' '|' ';' RSHIFT LSHIFT }\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '-' EXPR_MULT_DIV\l"];
	q51 [label="51:\l  EXPR_SHIFT -> EXPR_SHIFT RSHIFT EXPR_ADD_SUB . { ')' '&' '^' '|' ';' RSHIFT LSHIFT }\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '+' EXPR_MULT_DIV\l  EXPR_ADD_SUB -> EXPR_ADD_SUB . '-' EXPR_MULT_DIV\l"];
	q52 [label="52:\l  EXPR_BIT_AND -> EXPR_BIT_AND '&' EXPR_SHIFT . { ')' '&' '^' '|' ';' }\l  EXPR_SHIFT -> EXPR_SHIFT . LSHIFT EXPR_ADD_SUB\l  EXPR_SHIFT -> EXPR_SHIFT . RSHIFT EXPR_ADD_SUB\l"];
	q53 [label="53:\l  EXPR_BIT_XOR -> EXPR_BIT_XOR '^' EXPR_BIT_AND . { ')' '^' '|' ';' }\l  EXPR_BIT_AND -> EXPR_BIT_AND . '&' EXPR_SHIFT\l"];
	q54 [label="54:\l  EXPR_BIT_OR -> EXPR_BIT_OR '|' EXPR_BIT_XOR . { ')' '|' ';' }\l  EXPR_BIT_XOR -> EXPR_BIT_XOR . '^' EXPR_BIT_AND\l"];

	q0 -> q1 [label="NUM"];
	q0 -> q2 [label="VAR"];
	q0 -> q3 [label="DUMP"];
	q0 -> q4 [label="CLEAR"];
	q0 -> q5 [label="'-'"];
	q0 -> q6 [label="'~'"];
	q0 -> q7 [label="'('"];
	q0 -> q8 [label="commands"];
	q0 -> q9 [label="EXPR"];
	q0 -> q10 [label="EXPR_ADD_SUB"];
	q0 -> q11 [label="EXPR_MULT_DIV"];
	q0 -> q12 [label="EXPR_ASSIGN"];
	q0 -> q13 [label="EXPR_ASSIGN_SIMPLE"];
	q0 -> q14 [label="EXPR_BIT_NOT"];
	q0 -> q15 [label="EXPR_NEGATE"];
	q0 -> q16 [label="EXPR_SHIFT"];
	q0 -> q17 [label="EXPR_BIT_AND"];
	q0 -> q18 [label="EXPR_BIT_XOR"];
	q0 -> q19 [label="EXPR_BIT_OR"];
	q0 -> q20 [label="EXPR_PARENS"];
	q0 -> q21 [label="command"];
	q2 -> q22 [label="ASSIGN"];
	q2 -> q23 [label="'='"];
	q5 -> q1 [label="NUM"];
	q5 -> q24 [label="VAR"];
	q5 -> q6 [label="'~'"];
	q5 -> q7 [label="'('"];
	q5 -> q25 [label="EXPR_BIT_NOT"];
	q5 -> q20 [label="EXPR_PARENS"];
	q6 -> q1 [label="NUM"];
	q6 -> q24 [label="VAR"];
	q6 -> q7 [label="'('"];
	q6 -> q26 [label="EXPR_PARENS"];
	q7 -> q1 [label="NUM"];
	q7 -> q27 [label="VAR"];
	q7 -> q5 [label="'-'"];
	q7 -> q6 [label="'~'"];
	q7 -> q7 [label="'('"];
	q7 -> q28 [label="EXPR"];
	q7 -> q10 [label="EXPR_ADD_SUB"];
	q7 -> q11 [label="EXPR_MULT_DIV"];
	q7 -> q12 [label="EXPR_ASSIGN"];
	q7 -> q13 [label="EXPR_ASSIGN_SIMPLE"];
	q7 -> q14 [label="EXPR_BIT_NOT"];
	q7 -> q15 [label="EXPR_NEGATE"];
	q7 -> q16 [label="EXPR_SHIFT"];
	q7 -> q17 [label="EXPR_BIT_AND"];
	q7 -> q18 [label="EXPR_BIT_XOR"];
	q7 -> q19 [label="EXPR_BIT_OR"];
	q7 -> q20 [label="EXPR_PARENS"];
	q8 -> q1 [label="NUM"];
	q8 -> q2 [label="VAR"];
	q8 -> q3 [label="DUMP"];
	q8 -> q4 [label="CLEAR"];
	q8 -> q5 [label="'-'"];
	q8 -> q6 [label="'~'"];
	q8 -> q7 [label="'('"];
	q8 -> q9 [label="EXPR"];
	q8 -> q10 [label="EXPR_ADD_SUB"];
	q8 -> q11 [label="EXPR_MULT_DIV"];
	q8 -> q12 [label="EXPR_ASSIGN"];
	q8 -> q13 [label="EXPR_ASSIGN_SIMPLE"];
	q8 -> q14 [label="EXPR_BIT_NOT"];
	q8 -> q15 [label="EXPR_NEGATE"];
	q8 -> q16 [label="EXPR_SHIFT"];
	q8 -> q17 [label="EXPR_BIT_AND"];
	q8 -> q18 [label="EXPR_BIT_XOR"];
	q8 -> q19 [label="EXPR_BIT_OR"];
	q8 -> q20 [label="EXPR_PARENS"];
	q8 -> q29 [label="command"];
	q10 -> q30 [label="'+'"];
	q10 -> q31 [label="'-'"];
	q11 -> q32 [label="'*'"];
	q11 -> q33 [label="'/'"];
	q11 -> q34 [label="'%'"];
	q16 -> q35 [label="LSHIFT"];
	q16 -> q36 [label="RSHIFT"];
	q17 -> q37 [label="'&'"];
	q18 -> q38 [label="'^'"];
	q19 -> q39 [label="'|'"];
	q21 -> q40 [label="';'"];
	q22 -> q1 [label="NUM"];
	q22 -> q24 [label="VAR"];
	q22 -> q5 [label="'-'"];
	q22 -> q6 [label="'~'"];
	q22 -> q7 [label="'('"];
	q22 -> q41 [label="EXPR_ADD_SUB"];
	q22 -> q11 [label="EXPR_MULT_DIV"];
	q22 -> q14 [label="EXPR_BIT_NOT"];
	q22 -> q15 [label="EXPR_NEGATE"];
	q22 -> q20 [label="EXPR_PARENS"];
	q23 -> q1 [label="NUM"];
	q23 -> q24 [label="VAR"];
	q23 -> q6 [label="'~'"];
	q23 -> q7 [label="'('"];
	q23 -> q42 [label="EXPR_BIT_NOT"];
	q23 -> q20 [label="EXPR_PARENS"];
	q27 -> q22 [label="ASSIGN"];
	q27 -> q23 [label="'='"];
	q28 -> q43 [label="')'"];
	q29 -> q44 [label="';'"];
	q30 -> q1 [label="NUM"];
	q30 -> q24 [label="VAR"];
	q30 -> q5 [label="'-'"];
	q30 -> q6 [label="'~'"];
	q30 -> q7 [label="'('"];
	q30 -> q45 [label="EXPR_MULT_DIV"];
	q30 -> q14 [label="EXPR_BIT_NOT"];
	q30 -> q15 [label="EXPR_NEGATE"];
	q30 -> q20 [label="EXPR_PARENS"];
	q31 -> q1 [label="NUM"];
	q31 -> q24 [label="VAR"];
	q31 -> q5 [label="'-'"];
	q31 -> q6 [label="'~'"];
	q31 -> q7 [label="'('"];
	q31 -> q46 [label="EXPR_MULT_DIV"];
	q31 -> q14 [label="EXPR_BIT_NOT"];
	q31 -> q15 [label="EXPR_NEGATE"];
	q31 -> q20 [label="EXPR_PARENS"];
	q32 -> q1 [label="NUM"];
	q32 -> q24 [label="VAR"];
	q32 -> q5 [label="'-'"];
	q32 -> q6 [label="'~'"];
	q32 -> q7 [label="'('"];
	q32 -> q14 [label="EXPR_BIT_NOT"];
	q32 -> q47 [label="EXPR_NEGATE"];
	q32 -> q20 [label="EXPR_PARENS"];
	q33 -> q1 [label="NUM"];
	q33 -> q24 [label="VAR"];
	q33 -> q5 [label="'-'"];
	q33 -> q6 [label="'~'"];
	q33 -> q7 [label="'('"];
	q33 -> q14 [label="EXPR_BIT_NOT"];
	q33 -> q48 [label="EXPR_NEGATE"];
	q33 -> q20 [label="EXPR_PARENS"];
	q34 -> q1 [label="NUM"];
	q34 -> q24 [label="VAR"];
	q34 -> q5 [label="'-'"];
	q34 -> q6 [label="'~'"];
	q34 -> q7 [label="'('"];
	q34 -> q14 [label="EXPR_BIT_NOT"];
	q34 -> q49 [label="EXPR_NEGATE"];
	q34 -> q20 [label="EXPR_PARENS"];
	q35 -> q1 [label="NUM"];
	q35 -> q24 [label="VAR"];
	q35 -> q5 [label="'-'"];
	q35 -> q6 [label="'~'"];
	q35 -> q7 [label="'('"];
	q35 -> q50 [label="EXPR_ADD_SUB"];
	q35 -> q11 [label="EXPR_MULT_DIV"];
	q35 -> q14 [label="EXPR_BIT_NOT"];
	q35 -> q15 [label="EXPR_NEGATE"];
	q35 -> q20 [label="EXPR_PARENS"];
	q36 -> q1 [label="NUM"];
	q36 -> q24 [label="VAR"];
	q36 -> q5 [label="'-'"];
	q36 -> q6 [label="'~'"];
	q36 -> q7 [label="'('"];
	q36 -> q51 [label="EXPR_ADD_SUB"];
	q36 -> q11 [label="EXPR_MULT_DIV"];
	q36 -> q14 [label="EXPR_BIT_NOT"];
	q36 -> q15 [label="EXPR_NEGATE"];
	q36 -> q20 [label="EXPR_PARENS"];
	q37 -> q1 [label="NUM"];
	q37 -> q24 [label="VAR"];
	q37 -> q5 [label="'-'"];
	q37 -> q6 [label="'~'"];
	q37 -> q7 [label="'('"];
	q37 -> q10 [label="EXPR_ADD_SUB"];
	q37 -> q11 [label="EXPR_MULT_DIV"];
	q37 -> q14 [label="EXPR_BIT_NOT"];
	q37 -> q15 [label="EXPR_NEGATE"];
	q37 -> q52 [label="EXPR_SHIFT"];
	q37 -> q20 [label="EXPR_PARENS"];
	q38 -> q1 [label="NUM"];
	q38 -> q24 [label="VAR"];
	q38 -> q5 [label="'-'"];
	q38 -> q6 [label="'~'"];
	q38 -> q7 [label="'('"];
	q38 -> q10 [label="EXPR_ADD_SUB"];
	q38 -> q11 [label="EXPR_MULT_DIV"];
	q38 -> q14 [label="EXPR_BIT_NOT"];
	q38 -> q15 [label="EXPR_NEGATE"];
	q38 -> q16 [label="EXPR_SHIFT"];
	q38 -> q53 [label="EXPR_BIT_AND"];
	q38 -> q20 [label="EXPR_PARENS"];
	q39 -> q1 [label="NUM"];
	q39 -> q24 [label="VAR"];
	q39 -> q5 [label="'-'"];
	q39 -> q6 [label="'~'"];
	q39 -> q7 [label="'('"];
	q39 -> q10 [label="EXPR_ADD_SUB"];
	q39 -> q11 [label="EXPR_MULT_DIV"];
	q39 -> q14 [label="EXPR_BIT_NOT"];
	q39 -> q15 [label="EXPR_NEGATE"];
	q39 -> q16 [label="EXPR_SHIFT"];
	q39 -> q17 [label="EXPR_BIT_AND"];
	q39 -> q54 [label="EXPR_BIT_XOR"];
	q39 -> q20 [label="EXPR_PARENS"];
	q41 -> q30 [label="'+'"];
	q41 -> q31 [label="'-'"];
	q45 -> q32 [label="'*'"];
	q45 -> q33 [label="'/'"];
	q45 -> q34 [label="'%'"];
	q46 -> q32 [label="'*'"];
	q46 -> q33 [label="'/'"];
	q46 -> q34 [label="'%'"];
	q50 -> q30 [label="'+'"];
	q50 -> q31 [label="'-'"];
	q51 -> q30 [label="'+'"];
	q51 -> q31 [label="'-'"];
	q52 -> q35 [label="LSHIFT"];
	q52 -> q36 [label="RSHIFT"];
	q53 -> q37 [label="'&'"];
	q54 -> q38 [label="'^'"];
}
